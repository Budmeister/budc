
extern void printf(@(i8) str);
extern i32 atoi(@(i8) str);
extern i32 stoi(@(i8) str);
extern void getl(@(i8) buf, i32 bufsize);

i32 global_num;
extern i32 extern_num;
i32[4] arr1;
i8[3] arr2;
i8[3][12] arr3;

void printf2(@(i8) str, i32 num1, i32 num2, i32 num3) {
    printf(str, num1, num2, num3);
}

i32 fun(i32[3] a, i32 b, @(i32) c, i32[4][3][2] e, i8[3] g) {
    fun(a, b, c, e, g);
    b = a(b+4);
    c = @a[2];
    b = 0 - 4;
    b = b + *c;
    i8 d = 1;
    i32[4][3] f = e[2];
    b = c[1];
    i32 s = 0;
    while (b < 10) {
        printf("b: %d, s: %d \n \r \t \\ \' \" \c \x7e", b, s);
        s = s + b;
        b = b + 1;
    }

    set_global_num();
    i32 num1 = global_num;
    i32 num2 = 4;
    printf2("The sum of %d and %d is %d\r\n", num1, num2, num1 + num2);
    printf("Address of global_num: %p\r\n", @global_num);

    i32[9] h = [[1, 2, 3, 4, 5, 6, 7, 8, 9]];
    printf("h: [[%d, %d, %d, %d, %d, %d, %d, %d, %d]]\r\n", h[0], h[1], h[2], h[3], h[4], h[5], h[6], h[7], h[8]);

    i8[6] buf = empty;
    getl(@buf, 6);
    i32 num = atoi(@buf);

    i32 output = num > 10;
    printf("num > 10: %d\r\n", output);

    if num > 10 {
        printf("The number was greater than 10\r\n");
    } else {
        printf("The number was not greater than 10\r\n");
    }

    return 1;
}

struct my_struct {
    i32 hello
}

void set_global_num() {
    global_num = @global_num;
}

i16 main() {
    printf("sp: %p \r\n");
    printf("sp: %p \r\n");
    printf("sp: %p \r\n");
    printf("sp: %p \r\n");

    return 0;
}
